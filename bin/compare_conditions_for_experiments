#!/bin/bash
#
# Copyright (C) 2010
# David A. C. Beck
# dacb@u.washington.edu
# Chemical Engineering & eScience Institute
# University of Washington, Seattle
#
# Date: 11/03/2010
# Updated: 9/21/2011, added support for comparing restriction prefixes
# See version and usage information below
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

PROGNAME=${0##*/}
PROGVERSION=0.9.2

# setup defaults and statics
SILENT=0
DATAROOT=/Volumes/Drobo1
FIND_EXPERIMENTS_WITH_COMPLETE_CONDITIONS=/Users/dacb/msmskit/bin/find_experiments_with_complete_conditions
SEND_MAIL=/Users/dacb/msmskit/bin/send_mail
COMPARE_CONDITIONS_FOR_EXPERIMENT=/Users/dacb/msmskit/bin/compare_conditions_for_experiment
COMPARE_CONDITIONS_FOR_EXPERIMENT_WITH_ARTIFICIAL_BASELINES=/Users/dacb/msmskit/bin/compare_conditions_for_experiment_with_artificial_baselines

# usage message
usage()
{
cat << EOF

Usage: $0 [options]

This script compares joined replicates between conditions for experiments.

Options:
EOF
cat << EOF | column -s\& -t
  -h|--help & Show this message
  -v|--version & Show version information
  -s|--silent & Run in silent mode (no output log)
  -d|--dir <directory> & Path of directory to be searched relative to $DATAROOT
EOF
}

# parse arguments
SHORTOPTS="hvsd:"
LONGOPTS="help,version,silent,dir:"
ARGS=$(getopt -s bash --options $SHORTOPTS --longoptions $LONGOPTS --name $PROGNAME -- "$@")
if [ $? != 0 ]; then usage; exit 1; fi
eval set -- "$ARGS"
# loop through options
while true; do
	case $1 in
		-h|--help)
			usage
			exit 0
			;;
		-v|--version)
			echo "$PROGVERSION"
			exit 0
			;;
		-s|--silent)
			SILENT=1
			shift
			;;
		-d|--dir)
			DIR=$2
			shift 2
			;;
		--) 
			shift
			break
			;;
		*) 
			shift
			break
			;;
	esac
done

if [ -z "${DIR+xxx}" ]; then
	usage
	exit 1
fi

cd $DATAROOT

experiments_with_joined_conditions=`$FIND_EXPERIMENTS_WITH_COMPLETE_CONDITIONS | awk -v prefix="$DIR" '{ if (substr($0, 1, length(prefix)) == prefix) print $1 }'`

for experiment in $experiments_with_joined_conditions
do
	if [ $SILENT -eq 0 ]
	then
		echo experiment $experiment
	fi

	# list of complete conditions for this experiment
	conditions=`echo "CALL complete_conditions_in_experiment('$experiment');" | mysql -s msmskit`

	# iterate over possible pairs of conditions ignoring self same
	i=0
	for cond_i in $conditions
	do
		i=$((i + 1))
		j=0
		for cond_j in $conditions
		do
			j=$((j + 1))
			if [ $i -le $j ]
			then
				continue
			fi

			# get locus restriction lists
			# if both conditions have locus restrictions and there is over lap then compare
			locus_restrictions=`echo "CALL experiment_conditions_locus_restrictions('$cond_i', '$cond_j');" | mysql -s msmskit`
			ci_locus_restrictions=`echo "CALL experiment_condition_locus_restrictions('$cond_i');" | mysql -s msmskit`
			cj_locus_restrictions=`echo "CALL experiment_condition_locus_restrictions('$cond_j');" | mysql -s msmskit`
			if [ -z "$locus_restrictions" -a -n "$ci_locus_restrictions" -a -n "$cj_locus_restrictions" ]
			then
				echo "locus restrictions invalidate any comparisons for $cond_i vs $cond_j"
				continue
			fi

			# if locus_restrictions is not empty, then iterate over the locus restrictions
			if [ -n "$locus_restrictions" ]
			then
				for locus in $locus_restrictions
				do
					echo "$cond_j vs $cond_i restricted to prefix $locus"
					$COMPARE_CONDITIONS_FOR_EXPERIMENT $SILENT $DATAROOT $experiment $cond_i $cond_j $locus
					$COMPARE_CONDITIONS_FOR_EXPERIMENT_WITH_ARTIFICIAL_BASELINES $SILENT $DATAROOT $experiment $cond_i $cond_j $locus
				done
			else
				# if locus_restrictions is empty, then there are no locus restrictions on either condition
				echo "$cond_j vs $cond_i"
				$COMPARE_CONDITIONS_FOR_EXPERIMENT $SILENT $DATAROOT $experiment $cond_i $cond_j
				$COMPARE_CONDITIONS_FOR_EXPERIMENT_WITH_ARTIFICIAL_BASELINES $SILENT $DATAROOT $experiment $cond_i $cond_j
			fi

		done
	done
done
